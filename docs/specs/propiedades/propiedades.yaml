openapi: 3.0.2
info:
  title: API de Propiedades
  description: API para la gestión de propiedades en la aplicación.
  version: "1.0.0"
servers:
  - url: 'http://localhost:3000/api/propiedades'
    description: Servidor de desarrollo
paths:
  /listar:
    get:
      summary: Lista todas las propiedades con opción de filtrado por publicación
      tags:
        - Propiedades
      parameters:
        - in: query
          name: pagina
          schema:
            type: integer
            default: 1
          description: Número de página para la paginación de resultados.
        - in: query
          name: published
          schema:
            type: boolean
          description: Filtra las propiedades para mostrar solo las que están publicadas.
      responses:
        '200':
          description: Listado de propiedades obtenido con éxito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesListResponse'
        '400':
          description: Página inválida.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /getPropertyByCoincidence:
    get:
      summary: Busca propiedades por coincidencia en título o descripción
      tags:
        - Propiedades
      parameters:
        - in: query
          name: pagina
          schema:
            type: integer
            default: 1
          description: Número de página para la paginación de resultados.
        - in: query
          name: dato
          schema:
            type: string
          description: Término de búsqueda para encontrar coincidencias en el título o la descripción de las propiedades.
      responses:
        '200':
          description: Propiedades encontradas con éxito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesListResponse'
        '400':
          description: Página inválida o término de búsqueda vacío.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /featured:
    get:
      summary: Obtiene las propiedades destacadas y publicadas
      tags:
        - Propiedades
      security:
        - cookieAuth: []  # Indica que este endpoint requiere autenticación via cookie
      responses:
        '200':
          description: Propiedades destacadas encontradas con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesListResponse'
        '500':
          description: Error al buscar propiedades destacadas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /buscar/:titulo/{titulo}:
    get:
      summary: Busca propiedades por título con opción de filtrado por publicación
      tags:
        - Propiedades
      parameters:
        - in: path
          name: titulo
          required: true
          schema:
            type: string
          description: Título de la propiedad para buscar coincidencias
        - in: query
          name: pagina
          schema:
            type: integer
            default: 1
          description: Número de página para la paginación de resultados
        - in: query
          name: published
          schema:
            type: boolean
          description: Filtra las propiedades para mostrar solo las que están publicadas
      responses:
        '200':
          description: Propiedades encontradas con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesListResponse'
        '400':
          description: Página inválida o término de búsqueda vacío
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error al buscar la propiedad por título
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /new:
    post:
      summary: Crea una nueva propiedad
      tags:
        - Propiedades
      security:
        - cookieAuth: []  # Indica que este endpoint requiere autenticación via cookie
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPropertyRequest'
      responses:
        '200':
          description: Propiedad creada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyResponse'
        '400':
          description: Error al guardar la propiedad
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /update/{id}:
    put:
      summary: Actualiza una propiedad existente por su ID
      tags:
        - Propiedades
      security:
        - cookieAuth: []  # Indica que este endpoint requiere autenticación via cookie
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la propiedad a actualizar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePropertyRequest'
      responses:
        '200':
          description: Propiedad actualizada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyResponse'
        '404':
          description: La propiedad no fue encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error al actualizar la propiedad
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Elimina una propiedad por su ID
      tags:
        - Propiedades
      security:
        - cookieAuth: []  # Indica que este endpoint requiere autenticación via cookie
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la propiedad a eliminar
      responses:
        '200':
          description: Propiedad eliminada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          description: La propiedad no fue encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error al eliminar la propiedad
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: Busca una propiedad por su ID
      tags:
        - Propiedades
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la propiedad a buscar
      responses:
        '200':
          description: Propiedad encontrada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyResponse'
        '404':
          description: No existe la propiedad con ese ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error al buscar la propiedad
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /featured/{id}:
    patch:
      summary: Marca una propiedad como destacada
      tags:
        - Propiedades
      security:
        - cookieAuth: []  # Indica que este endpoint requiere autenticación via cookie
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la propiedad a marcar como destacada
      responses:
        '200':
          description: Propiedad marcada como destacada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyResponse'
        '404':
          description: La propiedad no fue encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error al marcar la propiedad como destacada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /unfeatured/{id}:
    patch:
      summary: Remueve la marca de destacada de una propiedad
      tags:
        - Propiedades
      security:
        - cookieAuth: []  # Indica que este endpoint requiere autenticación via cookie
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la propiedad a remover la marca de destacada
      responses:
        '200':
          description: Marca de destacada removida con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyResponse'
        '404':
          description: La propiedad no fue encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error al remover la marca de destacada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /publish/{id}:
    patch:
      summary: Publica una propiedad especificada por su ID
      tags:
        - Propiedades
      security:
        - cookieAuth: []  # Indica que este endpoint requiere autenticación via cookie
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la propiedad a publicar
      responses:
        '200':
          description: Propiedad publicada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyResponse'
        '404':
          description: La propiedad no fue encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error al publicar la propiedad
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /unpublish/{id}:
    patch:
      summary: Retira la publicación de una propiedad especificada por su ID
      tags:
        - Propiedades
      security:
        - cookieAuth: []  # Indica que este endpoint requiere autenticación via cookie  
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la propiedad a retirar de la publicación
      responses:
        '200':
          description: Propiedad despublicada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyResponse'
        '404':
          description: La propiedad no fue encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error al despublicar la propiedad
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /reserved/{id}:
    patch:
      summary: Reserva una propiedad especificada por su ID
      tags:
        - Propiedades
      security:
        - cookieAuth: []  # Indica que este endpoint requiere autenticación via cookie
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            description: ID de la propiedad a reservar
      responses:
        '200':
          description: Propiedad reservada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyResponse'
        '404':
          description: La propiedad no fue encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error al reservar la propiedad
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /unreserved/{id}:
    patch:
      summary: Quita la reserva de una propiedad especificada por su ID
      tags:
        - Propiedades
      security:
        - cookieAuth: []  # Indica que este endpoint requiere autenticación via cookie
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la propiedad a quitar la reserva
      responses:
        '200':
          description: Reserva de la propiedad quitada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyResponse'
        '404':
          description: La propiedad no fue encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error al quitar la reserva de la propiedad
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /filter:
    get:
      summary: Filtra propiedades en un mapa basado en varios criterios
      tags:
        - Propiedades
      responses:
        '200':
          description: Listado de propiedades filtradas en un mapa con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilteredPropertiesResponse'
        '400':
          description: Error en los parámetros de entrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error al filtrar propiedades
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /mapFilter:
    get:
      summary: Filtra propiedades en un mapa basado en varios criterios
      tags:
       - Propiedades
      responses:
        '200':
          description: Listado de propiedades filtradas en un mapa con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilteredPropertiesResponse'
        '400':
          description: Error en los parámetros de entrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error al filtrar propiedades
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /getLessorByProperty/{id}:
    get:
     summary: Obtiene los arrendadores asociados a una propiedad específica
     tags:
      - Propiedades
     security:
        - cookieAuth: []  # Indica que este endpoint requiere autenticación via cookie
     parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          description: ID de la propiedad
     responses:
      '200':
        description: Listado de arrendadores de la propiedad obtenido con éxito
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessorsByPropertyResponse'
      '404':
        description: La propiedad no fue encontrada
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      '500':
        description: Error al obtener arrendadores de la propiedad
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: _token
  schemas:
    PropertiesListResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/PropertyData'
        paginas:
          type: integer
        paginaActual:
          type: integer
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
    ErrorResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        error:
          type: string
    PropertyData:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        title:
          type: string
          maxLength: 300
          example: "Casa de lujo en el centro"
        price:
          type: number
          format: decimal
          example: 500000.00
        priceOrder:
          type: number
          format: decimal
          example: 500000.00
        mt2:
          type: integer
          example: 120
        mt2Edificado:
          type: integer
          nullable: true
          example: 100
        description:
          type: string
          example: "Amplia casa con jardín"
        room:
          type: integer
          example: 4
        parking:
          type: integer
          example: 2
        wc:
          type: integer
          example: 3
        location:
          type: string
          maxLength: 60
          example: "Centro"
        address:
          type: string
          maxLength: 255
          example: "Calle Falsa 123"
        lat:
          type: string
          example: "-34.603722"
        lng:
          type: string
          example: "-58.381592"
        images:
          type: array
          items:
            type: string
          example: ["url_to_image1.jpg", "url_to_image2.jpg"]
        published:
          type: boolean
          example: true
        reserved:
          type: boolean
          example: false
        featured:
          type: boolean
          example: false
        otherAttributes:
          type: object
          additionalProperties: true
          example: {"color": "blue", "size": "large"}
      required:
        - title
        - price
        - priceOrder
        - mt2
        - description
        - room
        - parking
        - wc
        - location
        - address
        - lat
        - lng
        - images
        - published
        - reserved
        - featured
    PropertyResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/PropertyData'
    NewPropertyRequest:
      type: object
      properties:
        title:
          type: string
          maxLength: 300
          example: "Casa de lujo en el centro"
        price:
          type: number
          format: decimal
          example: 500000.00
        priceOrder:
          type: number
          format: decimal
          example: 500000.00
        mt2:
          type: integer
          example: 120
        mt2Edificado:
          type: integer
          nullable: true
          example: 100
        description:
          type: string
          example: "Amplia casa con jardín"
        room:
          type: integer
          example: 4
        parking:
          type: integer
          example: 2
        wc:
          type: integer
          example: 3
        location:
          type: string
          maxLength: 60
          example: "Centro"
        address:
          type: string
          maxLength: 255
          example: "Calle Falsa 123"
        lat:
          type: string
          example: "-34.603722"
        lng:
          type: string
          example: "-58.381592"
        images:
          type: array
          items:
            type: string
          example: ["url_to_image1.jpg", "url_to_image2.jpg"]
        published:
          type: boolean
          example: true
        reserved:
          type: boolean
          example: false
        featured:
          type: boolean
          example: false
        otherAttributes:
          type: object
          additionalProperties: true
          example: {"color": "blue", "size": "large"}
      required:
        - title
        - price
        - priceOrder
        - mt2
        - description
        - room
        - parking
        - wc
        - location
        - address
        - lat
        - lng
        - images
        - published
        - reserved
        - featured
    UpdatePropertyRequest:
      type: object
      properties:
        title:
          type: string
          maxLength: 300
          example: "Casa de lujo en el centro"
        price:
          type: number
          format: decimal
          example: 500000.00
        priceOrder:
          type: number
          format: decimal
          example: 500000.00
        mt2:
          type: integer
          example: 120
        mt2Edificado:
          type: integer
          nullable: true
          example: 100
        description:
          type: string
          example: "Amplia casa con jardín"
        room:
          type: integer
          example: 4
        parking:
          type: integer
          example: 2
        wc:
          type: integer
          example: 3
        location:
          type: string
          maxLength: 60
          example: "Centro"
        address:
          type: string
          maxLength: 255
          example: "Calle Falsa 123"
        lat:
          type: string
          example: "-34.603722"
        lng:
          type: string
          example: "-58.381592"
        images:
          type: array
          items:
            type: string
          example: ["url_to_image1.jpg", "url_to_image2.jpg"]
        published:
          type: boolean
          example: true
        reserved:
          type: boolean
          example: false
        featured:
          type: boolean
          example: false
        otherAttributes:
          type: object
          additionalProperties: true
          example: {"color": "blue", "size": "large"}
      required:
        - title
        - price
        - priceOrder
        - mt2
        - description
        - room
        - parking
        - wc
        - location
        - address
        - lat
        - lng
        - images
        - published
        - reserved
        - featured
    SuccessResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
    FilteredPropertiesResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/PropertyData'
        paginas:
          type: integer
        paginaActual:
          type: integer
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
    LessorsByPropertyResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/LessorData'
        paginas:
          type: integer
        paginaActual:
          type: integer
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
    LessorData:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          maxLength: 100
          example: "Juan Pérez"
        email:
          type: string
          format: email
          example: "jperez@gmail.com"
        telephone:
          type: string
          maxLength: 20
          example: "1234567890"
        document:
          type: string
          maxLength: 20
          example: "12345678"
        address:
          type: string
          maxLength: 255
          example: "Calle Falsa 123"
        otherAttributes:
          type: object
          additionalProperties: true
          example: {"color": "blue", "size": "large"}
      required:
        - name
        - email
        - phone
  
          
