openapi: 3.0.2
info:
  title: API de Arrendadores
  description: API para la gestión de arrendadores en la aplicación.
  version: "1.0.0"
servers:
  - url: 'http://localhost:3000/api/arrendadores'
    description: Servidor de desarrollo
security:
  - cookieAuth: []
paths:
  /new:
    post:
      summary: Crea un nuevo arrendador
      tags:
        - Arrendadores
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewLessorRequest'
      responses:
        '200':
          description: Arrendador creado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessorResponseSuccess'
        '400':
          description: Error al crear arrendador
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessorResponseError'
  /getLessorById/{id}:
    get:
      summary: Obtiene un arrendador por su ID
      tags:
        - Arrendadores
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Arrendador encontrado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessorResponseSuccess'
        '404':
          description: No existe arrendador con ese ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessorResponseError'
  /getLessors:
    get:
      summary: Lista todos los arrendadores con paginación
      tags:
        - Arrendadores
      parameters:
        - name: pagina
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Número de página para la paginación de resultados
      responses:
        '200':
          description: Listado de arrendadores obtenido con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessorsListResponse'
        '400':
          description: Página inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /getLessorsByCoincidence:
    get:
      summary: Busca arrendadores por coincidencia en varios campos
      tags:
        - Arrendadores
      parameters:
        - name: pagina
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Número de página para la paginación de resultados
        - name: dato
          in: query
          required: true
          schema:
            type: string
          description: Dato de búsqueda para encontrar coincidencias en nombre, email, dirección, documento o teléfono
      responses:
        '200':
          description: Arrendadores encontrados con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessorsListResponse'
        '400':
          description: Página inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: No se encontraron arrendadores con el dato proporcionado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /lessors/{id}:
    put:
      summary: Actualiza un arrendador existente por su ID
      tags:
        - Arrendadores
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del arrendador a actualizar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewLessorRequest'
      responses:
        '200':
          description: Arrendador actualizado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessorResponseSuccess'
        '404':
          description: El arrendador no fue encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessorResponseError'
        '500':
          description: Error al actualizar el arrendador
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessorResponseError'
    delete:
      summary: Elimina un arrendador por su ID
      tags:
        - Arrendadores
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del arrendador a eliminar
      responses:
        '200':
          description: Arrendador eliminado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessorResponseSuccess'
        '404':
          description: El arrendador no fue encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessorResponseError'
        '500':
          description: Error al eliminar el arrendador
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessorResponseError'
  /lessors/{idLessor}/properties/add:
    post:
      summary: Asocia propiedades a un arrendador
      tags:
        - Arrendadores
      parameters:
        - name: idLessor
          in: path
          required: true
          schema:
            type: string
          description: ID del arrendador al que se le asociarán propiedades
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idProperties:
                  type: array
                  items:
                    type: string
              required:
                - idProperties
      responses:
        '200':
          description: Propiedades asociadas con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesAssociationResponse'
        '400':
          description: Error al asociar propiedades
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /lessors/{idLessor}/properties/remove:
    post:
      summary: Quita propiedades de un arrendador
      tags:
        - Arrendadores
      parameters:
        - name: idLessor
          in: path
          required: true
          schema:
            type: string
          description: ID del arrendador del que se quitarán propiedades
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idProperties:
                  type: array
                  items:
                    type: string
              required:
                - idProperties
      responses:
        '200':
          description: Propiedades quitadas con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesAssociationResponse'
        '400':
          description: Error al quitar propiedades
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /lessors/{lessorId}/properties:
    get:
      summary: Obtiene todas las propiedades asociadas a un arrendador específico
      tags:
        - Arrendadores
      parameters:
        - name: lessorId
          in: path
          required: true
          schema:
            type: string
          description: ID del arrendador
      responses:
        '200':
          description: Listado de propiedades del arrendador obtenido con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessorWithPropertiesResponse'
        '404':
          description: Arrendador no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /lessors/{lessorId}/properties/update:
    post:
      summary: Actualiza las propiedades asociadas a un arrendador
      tags:
        - Arrendadores
      parameters:
        - name: lessorId
          in: path
          required: true
          schema:
            type: string
          description: ID del arrendador para actualizar sus propiedades
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idProperties:
                  type: array
                  items:
                    type: string
              required:
                - idProperties
      responses:
        '200':
          description: Propiedades del arrendador actualizadas con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessorWithPropertiesResponse'
        '400':
          description: Una o más propiedades no existen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: El arrendador no existe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error al actualizar propiedades
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: _token
  schemas:
    NewLessorRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        telephone:
          type: string
        address:
          type: string
        document:
          type: string
        otherAttributes:
          type: object
      required:
        - name
        - email
        - telephone
        - address
        - document
    LessorResponseSuccess:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: object
          additionalProperties: true
    LessorResponseError:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        error:
          type: string
    LessorData:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
          format: email
        telephone: 
          type: string
        address:
          type: string
        document:
          type: string
        otherAttributes:
          type: object
    LessorsListResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/LessorData'
    Error:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        error:
          type: string
    PropertyData:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        title:
          type: string
          maxLength: 300
          example: "Casa de lujo en el centro"
        price:
          type: number
          format: decimal
          example: 500000.00
        priceOrder:
          type: number
          format: decimal
          example: 500000.00
        mt2:
          type: integer
          example: 120
        mt2Edificado:
          type: integer
          nullable: true
          example: 100
        description:
          type: string
          example: "Amplia casa con jardín"
        room:
          type: integer
          example: 4
        parking:
          type: integer
          example: 2
        wc:
          type: integer
          example: 3
        location:
          type: string
          maxLength: 60
          example: "Centro"
        address:
          type: string
          maxLength: 255
          example: "Calle Falsa 123"
        lat:
          type: string
          example: "-34.603722"
        lng:
          type: string
          example: "-58.381592"
        images:
          type: array
          items:
            type: string
          example: ["url_to_image1.jpg", "url_to_image2.jpg"]
        published:
          type: boolean
          example: true
        reserved:
          type: boolean
          example: false
        featured:
          type: boolean
          example: false
        otherAttributes:
          type: object
          additionalProperties: true
          example: {"color": "blue", "size": "large"}
      required:
        - title
        - price
        - priceOrder
        - mt2
        - description
        - room
        - parking
        - wc
        - location
        - address
        - lat
        - lng
        - images
        - published
        - reserved
        - featured
    PropertiesAssociationResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: object
          properties:
            lessor:
              $ref: '#/components/schemas/LessorData'
            propiedades:
              type: array
              items:
                $ref: '#/components/schemas/PropertyData'
    LessorWithPropertiesResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: object
          properties:
            lessor:
              $ref: '#/components/schemas/LessorData'
            properties:
              type: array
              items:
                $ref: '#/components/schemas/PropertyData'
    
